#!/bin/bash
set -o pipefail

function wireguard_connected () {
# $(($(date +%s) - $(sudo wg show wg0 latest-handshakes | awk '{ print $2; }')))
    now_="$(date +%s)"
    latest="$(sudo wg show wg0 latest-handshakes 2>/dev/null | awk '{ print $2; }')"
    if [[ -z "$latest" ]]; then
        false
        return
    fi
    # 5 minute timeout
    if [[ "(($now_ - $latest))" -gt 300 ]]; then
        false
        return
    fi
    true
    return    
}

function openvpn_connected () {
    while read -r line
    do
        if [[ "$line" == "0.0.0.0/1"*"dev tun"* ]]; then
            true
            return
        fi
    done < <(ip route)
    false
    return
}

function vpn_connected () {
    wireguard_connected $@
}

RED='\033[0;31m'
GREEN='\033[0;32m'
NORMAL='\033[0m'
if [ "$1" != "-q" ]; then
    echo -n "VPN is "
    if ! vpn_connected; then
        echo -ne "${RED}"
        echo -n "not "
    else
        echo -ne "${GREEN}"
    fi
    echo -e "connected${NORMAL}"
fi

# Exit status of script allows this to be used elsewhere
vpn_connected
